Ch 2
JS uses camel case
in REPL no need to console log a var to print it
once you declare a var with var = blah, reassignment doesn’t need any var declaration

Ch 3 : Types
types of types: primitive are built-in and immutable, objects are created and can change
primitive types: boolean, null, undefined, number, string
strings are immutable but can be concatenated 

Ch4 : Objects
objects are mutable, just a collection of properties (ex. string object has a length by definition)
if try to get length of a number, get undefined
(6).length so interp not think 6. 
declare objects with {}, so var imAnObject = {}
check type with typeof, so typeof imAnObject;

Ch5 : Arrays
arrays are lists that are called arrays
var groceries = [‘blah’, ‘blahblah’]
in JS, arrays are still objects — everything that wasn’t a primitive is an object
special properties: groceries[0]; will return item at index zero
groceries[groceries.length - 1]; will give last element in array
good for ordered lists

Ch6 : Functions
return statement in function used to return a value from invocation
if don’t care about the value but just the “side effects” of the function, no need to return
if no return statement, returns “undefined”
notice the scope of the function in hello world file

Ch7 : Operators
expression can be multiple lines if assignment to variable and only has one semicolon
can include query parameters in the URL with apiURL + ‘?lon’ + coordinate.longitude
query params aren’t like vars in that you need to use the params that are expected
if you have coordinate.longitude, good is object and long is property of that object
3+5 = 8
‘3’+’5’= 35

Ch8 : Requests and Servers

